머신러닝 

1. 데이터셋
# 1. 데이터 준비: 동화책 문체 예시 데이터
data = [
    {"instruction": "동화책 문체로 문장을 생성해줘", "input": "", "output": "한참을 걸어가던 아기 곰이 숲 속에서 작은 새를 만났어요."},
    {"instruction": "주인공이 용감하게 행동하는 장면을 써줘.", "input": "", "output": "용감한 소녀는 무서움을 떨치고 어두운 동굴 속으로 들어갔어요."},
    {"instruction": "마법사가 등장하는 이야기를 시작해줘.", "input": "", "output": "오래된 성에 살던 마법사는 어느 날 신비한 책을 발견했어요."},
    {"instruction": "행복한 결말을 가진 이야기를 써줘.", "input": "", "output": "모든 친구들이 함께 춤을 추며 행복한 시간을 보냈답니다."}, 
    {"instruction": "동화책 문체로 문장을 생성해줘", "input": "", "output": "작은 다람쥐는 겨울을 준비하며 도토리를 모았어요."},
    {"instruction": "동화책 문체로 문장을 생성해줘", "input": "", "output": "별 하나가 빛을 잃자 다른 별들이 걱정했어요."},
    {"instruction": "동화책 문체로 문장을 생성해줘", "input": "", "output": "강물은 바다를 향해 천천히 흘러갔어요."},
    {"instruction": "동화책 문체로 문장을 생성해줘", "input": "", "output": "바람은 나뭇잎을 흔들며 인사를 했어요."},
    {"instruction": "동화책 문체로 문장을 생성해줘", "input": "", "output": "마법의 열쇠는 오래된 문을 열었어요."},
    {"instruction": "동화책 문체로 문장을 생성해줘", "input": "", "output": "아이들은 들판에서 꽃을 모으며 웃었어요."},
    {"instruction": "동화책 문체로 문장을 생성해줘", "input": "", "output": "눈이 내린 숲 속에서는 모든 것이 조용했어요."},
    {"instruction": "동화책 문체로 문장을 생성해줘", "input": "", "output": "작은 배는 파도를 타며 멀리 떠나갔어요."},
    {"instruction": "동화책 문체로 문장을 생성해줘", "input": "", "output": "달빛이 호수에 비치자 물고기들이 반짝였어요."},
    {"instruction": "동화책 문체로 문장을 생성해줘", "input": "", "output": "소년은 하늘을 보며 별을 세기 시작했어요."},
    {"instruction": "동화책 문체로 문장을 생성해줘", "input": "", "output": "작은 불꽃이 어두운 방을 밝혔어요."},
    {"instruction": "동화책 문체로 문장을 생성해줘", "input": "", "output": "나무는 자신의 가지에 달린 열매를 자랑했어요."},
    {"instruction": "동화책 문체로 문장을 생성해줘", "input": "", "output": "요정은 꽃잎을 타고 날아다녔어요."},
    {"instruction": "동화책 문체로 문장을 생성해줘", "input": "", "output": "별빛 아래에서 두 친구는 비밀을 나누었어요."},
    {"instruction": "동화책 문체로 문장을 생성해줘", "input": "", "output": "강아지는 주인을 만나기 위해 멀리 달려갔어요."},
    {"instruction": "동화책 문체로 문장을 생성해줘", "input": "", "output": "달은 고독한 사람에게 따뜻한 빛을 보내주었어요."},
    {"instruction": "동화책 문체로 문장을 생성해줘", "input": "", "output": "작은 새는 둥지를 짓기 위해 나뭇가지를 모았어요."},
    {"instruction": "동화책 문체로 문장을 생성해줘", "input": "", "output": "마법사는 자신의 지팡이로 기적을 만들어냈어요."},
    {"instruction": "동화책 문체로 문장을 생성해줘", "input": "", "output": "바다는 파도를 일으키며 노래를 불렀어요."},
    {"instruction": "동화책 문체로 문장을 생성해줘", "input": "", "output": "작은 불꽃은 어둠 속에서도 빛났어요."},
    {"instruction": "동화책 문체로 문장을 생성해줘", "input": "", "output": "눈 덮인 산길을 따라 소년이 걸어갔어요."},
    {"instruction": "동화책 문체로 문장을 생성해줘", "input": "", "output": "별은 밤하늘에서 반짝이며 이야기를 들려주었어요."},
    {"instruction": "동화책 문체로 문장을 생성해줘", "input": "", "output": "작은 배는 바람을 타고 멀리 떠나갔어요."},
    {"instruction": "동화책 문체로 문장을 생성해줘", "input": "", "output": "나무는 뿌리를 깊게 내리며 살아남았어요."},
    {"instruction": "동화책 문체로 문장을 생성해줘", "input": "", "output": "바람은 메아리처럼 이야기를 전했어요."},
    {"instruction": "동화책 문체로 문장을 생성해줘", "input": "", "output": "별은 자신의 빛으로 세상을 따뜻하게 했어요."},
    {"instruction": "동화책 문체로 문장을 생성해줘", "input": "", "output": "강물은 바다를 향해 천천히 흘러갔어요."},
    {"instruction": "동화책 문체로 문장을 생성해줘", "input": "", "output": "작은 새는 둥지를 짓기 위해 나뭇가지를 모았어요."},
    {"instruction": "동화책 문체로 문장을 생성해줘", "input": "", "output": "마법사는 자신의 지팡이로 기적을 만들어냈어요."},
    {"instruction": "동화책 문체로 문장을 생성해줘", "input": "", "output": "바다는 파도를 일으키며 노래를 불렀어요."},
    {"instruction": "동화책 문체로 문장을 생성해줘", "input": "", "output": "작은 불꽃은 어둠 속에서도 빛났어요."},
    {"instruction": "동화책 문체로 문장을 생성해줘", "input": "", "output": "눈 덮인 산길을 따라 소년이 걸어갔어요."},
    {"instruction": "동화책 문체로 문장을 생성해줘", "input": "", "output": "별은 밤하늘에서 반짝이며 이야기를 들려주었어요."},
    {"instruction": "동화책 문체로 문장을 생성해줘", "input": "", "output": "작은 배는 바람을 타고 멀리 떠나갔어요."},
    {"instruction": "동화책 문체로 문장을 생성해줘", "input": "", "output": "나무는 뿌리를 깊게 내리며 살아남았어요."},
    {"instruction": "동화책 문체로 문장을 생성해줘", "input": "", "output": "바람은 메아리처럼 이야기를 전했어요."},
    {"instruction": "동화책 문체로 문장을 생성해줘", "input": "", "output": "별은 자신의 빛으로 세상을 따뜻하게 했어요."},
    {"instruction": "동화책 문체로 문장을 생성해줘", "input": "", "output": "강물은 바다를 향해 천천히 흘러갔어요."},
    {"instruction": "동화책 문체로 문장을 생성해줘", "input": "", "output": "작은 새는 둥지를 짓기 위해 나뭇가지를 모았어요."},
    {"instruction": "동화책 문체로 문장을 생성해줘", "input": "", "output": "마법사는 자신의 지팡이로 기적을 만들어냈어요."},
    {"instruction": "동화책 문체로 문장을 생성해줘", "input": "", "output": "바다는 파도를 일으키며 노래를 불렀어요."},
    {"instruction": "동화책 문체로 문장을 생성해줘", "input": "", "output": "작은 불꽃은 어둠 속에서도 빛났어요."},
    {"instruction": "동화책 문체로 문장을 생성해줘", "input": "", "output": "눈 덮인 산길을 따라 소년이 걸어갔어요."},
    {"instruction": "동화책 문체로 문장을 생성해줘", "input": "", "output": "별은 밤하늘에서 반짝이며 이야기를 들려주었어요."},
    {"instruction": "동화책 문체로 문장을 생성해줘", "input": "", "output": "작은 배는 바람을 타고 멀리 떠나갔어요."},
    {"instruction": "동화책 문체로 문장을 생성해줘", "input": "", "output": "나무는 뿌리를 깊게 내리며 살아남았어요."},
    {"instruction": "동화책 문체로 문장을 생성해줘", "input": "", "output": "바람은 메아리처럼 이야기를 전했어요."},
    {"instruction": "동화책 문체로 문장을 생성해줘", "input": "", "output": "별은 자신의 빛으로 세상을 따뜻하게 했어요."},
    {"instruction": "동화책 문체로 문장을 생성해줘", "input": "", "output": "강물은 바다를 향해 천천히 흘러갔어요."},
    {"instruction": "동화책 문체로 문장을 생성해줘", "input": "", "output": "작은 새는 둥지를 짓기 위해 나뭇가지를 모았어요."},
    {"instruction": "동화책 문체로 문장을 생성해줘", "input": "", "output": "마법사는 자신의 지팡이로 기적을 만들어냈어요."},
    {"instruction": "동화책 문체로 문장을 생성해줘", "input": "", "output": "바다는 파도를 일으키며 노래를 불렀어요."},
    {"instruction": "동화책 문체로 문장을 생성해줘", "input": "", "output": "작은 불꽃은 어둠 속에서도 빛났어요."},
    {"instruction": "동화책 문체로 문장을 생성해줘", "input": "", "output": "소녀는 꽃밭에서 꿈을 꾸며 춤을 추었어요."},
    {"instruction": "동화책 문체로 문장을 생성해줘", "input": "", "output": "바람은 메아리처럼 이야기를 전했어요."},
    {"instruction": "동화책 문체로 문장을 생성해줘", "input": "", "output": "별은 자신의 빛으로 세상을 따뜻하게 했어요."},
    {"instruction": "동화책 문체로 문장을 생성해줘", "input": "", "output": "강물은 바다를 향해 천천히 흘러갔어요."},
    {"instruction": "동화책 문체로 문장을 생성해줘", "input": "", "output": "작은 새는 둥지를 짓기 위해 나뭇가지를 모았어요."},
    {"instruction": "동화책 문체로 문장을 생성해줘", "input": "", "output": "마법사는 자신의 지팡이로 기적을 만들어냈어요."},
    {"instruction": "동화책 문체로 문장을 생성해줘", "input": "", "output": "바다는 파도를 일으키며 노래를 불렀어요."},
    {"instruction": "동화책 문체로 문장을 생성해줘", "input": "", "output": "작은 불꽃은 어둠 속에서도 빛났어요."},
    {"instruction": "동화책 문체로 문장을 생성해줘", "input": "", "output": "눈 덮인 산길을 따라 소년이 걸어갔어요."},
    {"instruction": "동화책 문체로 문장을 생성해줘", "input": "", "output": "별은 밤하늘에서 반짝이며 이야기를 들려주었어요."},
    {"instruction": "동화책 문체로 문장을 생성해줘", "input": "", "output": "작은 배는 바람을 타고 멀리 떠나갔어요."},
    {"instruction": "동화책 문체로 문장을 생성해줘", "input": "", "output": "나무는 뿌리를 깊게 내리며 살아남았어요."},
    {"instruction": "동화책 문체로 문장을 생성해줘", "input": "", "output": "바람은 나뭇잎을 흔들며 인사를 했어요."},
    {"instruction": "동화책 문체로 문장을 생성해줘", "input": "", "output": "마법의 책은 비밀스러운 이야기를 들려주었어요."},
    {"instruction": "동화책 문체로 문장을 생성해줘", "input": "", "output": "작은 요정은 꽃잎을 타고 날아다녔어요."},
    {"instruction": "동화책 문체로 문장을 생성해줘", "input": "", "output": "별 하나가 빛을 잃자 다른 별들이 걱정했어요."},
    {"instruction": "동화책 문체로 문장을 생성해줘", "input": "", "output": "강아지는 주인을 만나기 위해 멀리 달려갔어요."},
    {"instruction": "동화책 문체로 문장을 생성해줘", "input": "", "output": "달은 고독한 사람에게 따뜻한 빛을 보내주었어요."},
    {"instruction": "동화책 문체로 문장을 생성해줘", "input": "", "output": "작은 불꽃이 어두운 방을 밝혔어요."},
    {"instruction": "동화책 문체로 문장을 생성해줘", "input": "", "output": "바다는 파도를 일으키며 이야기를 들려주었어요."},
    {"instruction": "동화책 문체로 문장을 생성해줘", "input": "", "output": "나무는 자신의 가지에 달린 열매를 자랑했어요."},
    {"instruction": "동화책 문체로 문장을 생성해줘", "input": "", "output": "작은 요정은 꽃잎을 타고 날아다녔어요."},
    {"instruction": "동화책 문체로 문장을 생성해줘", "input": "", "output": "별빛 아래에서 두 친구는 비밀을 나누었어요."},
    {"instruction": "동화책 문체로 문장을 생성해줘", "input": "", "output": "바람은 나뭇잎을 흔들며 인사를 했어요."},
    {"instruction": "동화책 문체로 문장을 생성해줘", "input": "", "output": "마법의 열쇠는 오래된 문을 열었어요."},
    {"instruction": "동화책 문체로 문장을 생성해줘", "input": "", "output": "아이는 하늘을 보며 별을 세기 시작했어요."},
    {"instruction": "동화책 문체로 문장을 생성해줘", "input": "", "output": "작은 배는 바다를 건너 새로운 섬을 발견했어요."},
    {"instruction": "동화책 문체로 문장을 생성해줘", "input": "", "output": "나무는 뿌리를 깊숙이 내리며 살아남았어요."}
]

2. 학습
기본적으로 학습 파라미터의 값을 기반으로 학습을 한다.

 - output_dir="./lora_finetuned_qwen"
학습된 모델을 내보내는 폴더 변수이다. 모델을 저장할(체크포인트 포함)폴더를 적는다.

 - per_device_train_batch_size
배치(학습을 할 내용들) 크기 조절하는 파라미터이다.
1로 하면 gpu 메모리가 절약된다. 하지만 학습속도가 현저히 느려지고 그래디언트 업데이트 불안정성이 높아진다.

 - num_train_epochs
전체 훈련 데이터셋의 반복학습 정도를 조절하는 파라미터이다.
변수의 숫자에 따라 데이터셋의 반복 학습을 조절할 수 있다.
1 = 전체 데이터셋을 1번 학습
2 = 전체 데이터셋을 2번 학습
3 = 전체 데이터셋을 3번 학습
4 = 전체 데이터셋을 4번 학습
...
이런식으로 조절할 수 있다.

값이 낮아지면 과적합 방지효과가 있고 빠른 학습이 되지만, 모델에 불충분한 학습과 성능저하로 이어진다.
기본적으로 제한된 시간 내에 학습을 완료해야 하는 경우나 빠른 실험/테스트가 필요한 경우, 그리고 데이터 셋 크기가 매우 큰 경우에만 사용한다.

참고로 max_step 변수가 이미 정해진 경우 값이 무시되므로 조심해야 한다.


 - logging_steps
모델이 학습 스텝(배치 학습 완료시)마다 기록된 정보를 표현하는 파라미터이다. 이 파라미터는 모델 학습에 영향이 가지 않고, 표시만 하는 정보이다.

 - save_steps
체크포인트 저장을 몇스텝마다 하는지 주기를 정하는 파라미터이다. 
모델이 어느정도의 스텝마다 체크포인트(모델의 학습 분기)를 설정하고 이를 output_dir에 기반하여 저장한다.
 * 값은 50단위로 작성되야 한다. 

 - save_total_limit
체크포인트 저장을 제한을 하는 파라미터이다. 
값이 10이면 체크포인트 파일이 저장된 폴더가 10개 초과시 삭제하는 방식이다.

 - learning_rate
학습률을 조절하는 파라미터이다. 
보통 2e-3~2e-6 사이로 권장된다. 값이 작아지면 과적합이 될 확률이 높고, 높으면 모델의 성능이 낮고 불안정해진다.

 - fp16
FP16(혼합 정밀도)을 활성화 할지 여부를 체크하는 파라미터이다.
이 파라미터를 활성화 하면 16비트 부동소수점 연산을 활용하여 메모리 사용량이 줄어들고 계산속도가 높아진다. 하지만, 메모리의 속도가 빨라야 하며, 연산속도가 높은 GPU에서만 효과를 발휘한다.(cpu시 역효과)

 - gradient_accumulation_steps
그래디언트 누적 단계수를 조절하는 파라미터이다.
가상의 메모리 공간에 스텝을 집어 넣어 epoch의 단계를 높이고 적은 배치량으로 큰 배치 크기와 유사한 효과를 낸다.
주로 GPU메모리가 부족해 배치 크기를 늘릴수 없을 경우 이 값을 높힌다.

 - metric_for_best_model
최적모델 선택시 사용할 메트릭의 파라미터이다.
검증 데이터셋에서 가장 좋은 성능을 보이는 모델을 선택하는 기준을 설정하는 값이며, 
eval_loss : 검증데이터에서 계산한 손실값(낮을수록 좋음)
accuracy : 분류작업에서의 정확도(높을수록 좋음)
f1 : 불균형 데이터셋에서의 점수(높을수록 좋음)
precision : 정밀도(높을수록 좋음)
recall : 재현률(높을수록 좋음)
rouge : 텍스트 요약, 생성(높을수록 좋음)
bleu : 번역 및 텍스트 생성(높을수록 좋음)

코드상에는
'eval_runtime'
'eval_samples_per_second'
'eval_steps_per_second'
'epoch'
으로 정할 수 있다.

 - warmup_ratio
학습초기에 학습률을 서서히 증가시키는 비율을 조정하는 파라미터이다.
학습 시작시 학습률을 0부터 점진적으로 증가시켜서 안정적인 학습을 돕는 파라미터이며, 급격한 변화에 적응하지 못하는 문제를 완화시킨다.

 - load_best_model_at_end
학습종료시 최적모델을 자동으로 로드한지 여부를 정하는 파라미터이다.
metric_for_best_model에 따라 가장 좋은 성능을 보이는 모델을 학습종료 후 자동으로 로드하는 방식이다.

 - evaluation_strategy
검증단계의 단위를 어떻게 하냐를 표현한 파라미터이다.
각 값으로는 "none", "epoch", "steps"으로 되어 있으며, 각각 없음, 설정된 에포크단위, 설정된 스텝 단위 의 뜻을 가지고 있다.
이 값은 eval_steps와 연관되어 있다.

 - save_strategy
체크포인트 저장단계 단위를 어떻게 하냐를 표현한 파라미터이다.
위와 같이 3값으로 되어 있으며, 내용도 같다.
이 값은 save_steps와 연관되어 있다.

 - max_steps
스텝의 리미트를 거는 파라미터이다.
값이 10000 이라고 설정되어 있다면 스텝을 10000 까지만 학습한다고 보면 된다.
num_train_epochs 값이 있을경우 이 값이 무시되며 작동하므로 조심해야 한다.

 - eval_steps
검증을 몇스텝마다 하는지 주기를 정하는 파라미터이다. 
만약에 50이라고 치면 50스텝마다 분기된 검증데이터를 대조하여 eval_loss 등의 파라미터로 어느정도인지 체크한다.
체크 후 로그 형태로 표시한다.
 * 값은 50단위로 작성되야 한다. 

2-1). 토크나이저
토크나이저는 데이터셋부터 분리하고 검증데이터, 학습데이터를 1:9 비율로 나눠준다.

2-2). 평가메트릭
검증단계 실시시 평가 매트릭이 필요하다.(평가X시 학습 오류확률 높음)
